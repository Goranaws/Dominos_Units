local Addon = _G[...]local UnitFrameModule = Addon.master:NewModule('Frame')Addon.UnitFrameModule = UnitFrameModulelocal resetRequired = nillocal version = 6.1function UnitFrameModule:OnInitialize()	Addon.master.db.profile.units = Addon.master.db.profile.units or defaults		if resetRequired and Dominos_UnitsVersion ~= version then		Dominos_UnitsVersion = version			Addon.master.db.profile.units = defaults			for i,b in pairs(Addon.master.db.profile.frames) do				if Addon.IsUnitValid(i) then					Addon.master.db.profile.frames[i] = nil				end			end		--reset all settings!		self:Load()	endendfunction UnitFrameModule:Load()		self:UnloadAll()	for unit, b in pairs(Addon.getSets().frames) do		if b == true then			unit = string.lower(unit)			local frame = Addon:New(unit)			frame:Reload()		end	end	for frameName, b in pairs(Addon.getSets().hide) do		if frameName and _G[frameName] then			_G[frameName]:SetParent(Addon.HIDER)		end	endendAddon.LoadAll = UnitFrameModule.Loadfunction UnitFrameModule:UnloadAll()	if #Addon.frames > 0 then		for unit, frame in pairs(Addon.frames) do			frame:Hide()			if frame.box then				frame.box:SetAttribute('unit', nil)				UnregisterUnitWatch(frame.box)			end			frame:Free()		end	endend