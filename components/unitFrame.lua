local AddonName = "Dominos"local Addon = LibStub('AceAddon-3.0'):GetAddon(AddonName)local UnitButton = Addon:CreateClass('Button')Addon.UnitButton = UnitButtonfunction UnitButton:New(parent)	local name = ('%s_%s_UnitButton'):format(AddonName, parent.id)	if _G[name] then		return _G[name]	end	local button = self:Bind(CreateFrame('Button', name, parent, 'SecureUnitButtonTemplate'))	button.owner = parent	parent.box = button	return buttonendfunction UnitButton:OnEnter()	self.unit = self.owner.id	UnitFrame_OnEnter(self)endfunction UnitButton:OnLeave()	UnitFrame_OnLeave(self)endfunction UnitButton:OnUpdate(elapsed)	local parts = self.owner.components	if not parts then		return	end	local hasMouse	for i , part in pairs(parts) do		if part.Update then			part:Update(elapsed)		end		if (MouseIsOver(part) and part:IsShown()) and not hasMouse then			hasMouse = part		end	end	if hasMouse and MouseIsOver(hasMouse) then		if self.lastMouse ~= hasMouse then			local ent = hasMouse:GetScript("OnEnter")			if ent then				ent(hasMouse)			else				self:OnEnter()			end		end		self.lastMouse = hasMouse	else		if self.lastMouse then			self:OnLeave()			self.lastMouse = nil		end	endendfunction UnitButton:Layout()	local w, h = self.owner.sets.width, self.owner.sets.height	local padW, padH = self.owner:GetPadding()		self.owner:SetSize(w + (padW*1.5), h + (padH*1.5))	self:SetSize(w, h)endfunction UnitButton:Load()	self:EnableMouse(true)	self.unit = self.owner.id	self:SetAttribute("unit", self.unit)	RegisterUnitWatch(self)	self:SetScript('OnUpdate', self.OnUpdate)	self:SetPoint("Center", self.owner)endlocal unitBar = Dominos[...]unitBar:AddPart("box", function(parent)	return UnitButton:New(parent)end)