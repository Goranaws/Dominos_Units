local customFrame = Dominos[...]local Llocal function AddLayoutPanel(menu)	local panel = menu:NewPanel(L.Layout)	panel.opacitySlider = panel:NewOpacitySlider()	panel.fadeSlider = panel:NewFadeSlider()	panel.paddingSlider = panel:NewPaddingSlider()	panel:NewSlider("Height", 10, 600, 1,		function(self) --Getter			self:SetValue(self:GetParent().owner.sets.height)		end,		function(self) --Setter			self:GetParent().owner.sets.height = self:GetValue()			self:GetParent().owner:Layout()		end	)	panel:NewSlider("Width", 10, 600, 1,		function(self) --Getter			self:SetValue(self:GetParent().owner.sets.width)		end,		function(self) --Setter			self:GetParent().owner.sets.width = self:GetValue()			self:GetParent().owner:Layout()		end	)		panel.scaleSlider = panel:NewScaleSlider()	return panelendlocal function AddShowState(self)	local p = self:NewPanel(L.ShowStates)	p.height = 56	local editBox = CreateFrame('EditBox', p:GetName() .. 'StateText', p, 'InputBoxTemplate')	editBox:SetWidth(148) editBox:SetHeight(20)	editBox:SetPoint('TOPLEFT', 12, -10)	editBox:SetAutoFocus(false)	editBox:SetScript('OnShow', function(self)		self:SetText(self:GetParent().owner:GetShowStates() or '')	end)	editBox:SetScript('OnEnterPressed', function(self)		local text = self:GetText()		self:GetParent().owner:SetShowStates(text ~= '' and text or nil)		self:ClearFocus()	end)	editBox:SetScript('OnEditFocusLost', function(self) self:HighlightText(0, 0) end)	editBox:SetScript('OnEditFocusGained', function(self) self:HighlightText() end)	local set = CreateFrame('Button', p:GetName() .. 'Set', p, 'UIPanelButtonTemplate')	set:SetWidth(30) set:SetHeight(20)	set:SetText(L.Set)	set:SetScript('OnClick', function(self)		local text = editBox:GetText()		self:GetParent().owner:SetShowStates(text ~= '' and text or nil)		editBox:SetText(self:GetParent().owner:GetShowStates() or '')		editBox:ClearFocus()	end)	set:SetPoint('BOTTOMRIGHT', -8, 2)	return pendlocal function Menu(menu, name, key, table)	local f = CreateFrame("Frame", menu:GetName()..name, menu)	f:SetSize(24, 24)	f.button = CreateFrame("Button", f:GetName().."Button", f)	f.button:SetPoint("Top")	f.button:SetSize(24, 24)	f.button:SetNormalTexture("Interface\\ChatFrame\\UI-ChatIcon-ScrollDown-Up")	f.button:SetPushedTexture("Interface\\ChatFrame\\UI-ChatIcon-ScrollDown-Down")	f.button:SetDisabledTexture("Interface\\ChatFrame\\UI-ChatIcon-ScrollDown-Disabled")	f.button:SetHighlightTexture("Interface\\Buttons\\UI-Common-MouseHilight")	f.text = f:CreateFontString(f:GetName() .. 'Text', "OVERLAY", "GameFontHighlightSmall")	f.text:SetPoint("BottomLeft", f.button, "BottomRight", 6, 2)	f.text:SetJustifyH('LEFT')	local title = f:CreateFontString(nil, "OVERLAY", "GameFontNormalSmall")	title:SetPoint("TopLeft", f.button, "TopRight", 4, -2)	title:SetText(name)	f.title = title	f:SetScript("OnHide", function() CloseDropDownMenus() end)	f.button:SetScript("OnClick", function(self)		UIDropDownMenu_SetAnchor(f, -4, 6, "TopLeft", f.button, "BottomLeft")		ToggleDropDownMenu(1, nil, f)		PlaySound("igMainMenuOptionCheckBoxOn")	end)	local dropDownList = _G["DropDownList"..1]	dropDownList.dropdown = f	dropDownList.shouldRefresh = true		local prev = menu.checkbutton	if prev then		f:SetPoint('TOP', prev, 'BOTTOM', 0, -0)	else		f:SetPoint('TOPLEFT', 2, -5)	end	f.point = {f:GetPoint()}	menu.checkbutton = f.button	f.button:SetHitRectInsets(0, 0 , 0, 0)	menu.height = menu.height + 48	return fendlocal function GetDominos()	return DominosDB.profiles[DominosDB.profileKeys[UnitName("player").." - "..GetRealmName()]].framesendlocal blackList = {	point = 1,	x = 1,	y = 1,	anchor = 1,}local function Copy(source, destination, looped)	if not destination then		destination = {}	end	for i, b in pairs(source) do		if (type(b) == "table") then			destination[i] = Copy(b, destination[i], true)		else			if (not looped) and (blackList[i]) then							else				destination[i] = b			end		end	end	return destinationendlocal function AddCustomPanel(menu)	Dominos_Units = Dominos_Units or {}	local panel = menu:NewPanel("Settings")	local f =  Menu(panel, "Saved", "saved")	f:SetScript('OnShow', function(self)		if self ~= f then			return		end		f:initialize()		f.text:SetText("Copy From:")		if not self.stretch then			self.stretch = 1			f.button:SetHitRectInsets(0, -(f.title:GetCenter()+ (f.title:GetWidth()/2)- f.button:GetCenter()+ (f.button:GetWidth()/2)), 0, 0)		end	end)		function f:initialize()		local owner = panel.owner		Dominos_Units.unitLayouts = Dominos_Units.unitLayouts or {Default = customFrame:GetDefaults()}		local info = UIDropDownMenu_CreateInfo()		for profile, layout in pairs(Dominos_Units.unitLayouts) do			wipe(info)			info.text = profile			info.func = function(item, name)				GetDominos()[owner.id] = Copy(layout, GetDominos()[owner.id])				owner.sets = GetDominos()[owner.id]				owner:Reload()				owner:Layout()				owner:Rescale()				owner:Reposition()				f.text:SetText(profile)			end			info.arg1 = layout			UIDropDownMenu_AddButton(info)		end	end		return panelendlocal function AddAdvancedPanel(menu)	local panel = menu:NewPanel(L.Advanced)	panel:NewClickThroughCheckbox()	panel:NewShowInOverrideUICheckbox()	panel:NewShowInPetBattleUICheckbox()	return panelendfunction customFrame:CreateMenu()	local menu = Dominos:NewMenu(self.id)	local panel = AddLayoutPanel(menu)	if self.components then		for i, b in pairs(self.components) do			if b.GetPanel then				b:GetPanel(menu)			end		end	end	AddShowState(menu)	AddCustomPanel(menu)	AddAdvancedPanel(menu)	return menuendlocal menu, configfunction customFrame:ShowMenu()	if not Dominos:IsConfigAddonEnabled() then return end	config = config or LoadAddOn('Dominos_Config')	L = L or LibStub('AceLocale-3.0'):GetLocale('Dominos-Config')	customFrame.menu = customFrame.menu or self:CreateMenu()	local menu = customFrame.menu	menu:Hide()	menu:SetOwner(self)	menu:ShowPanel(L.Layout)	menu:Show()end